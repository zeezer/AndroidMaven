plugins {
    id 'com.android.library'
    id 'maven-publish'
//    id 'digital.wup.android-maven-publish' version '3.6.3'
//    id 'io.github.gradle-nexus.publish-plugin' version '1.3.0'
//    alias(libs.plugins.kotlin.android)
//    alias(libs.plugins.kotlin.compose)
}

android {
    namespace 'com.bjw.ComAssistant'
    compileSdk 35

    defaultConfig {
//        applicationId "com.bjw.ComAssistant1"
        minSdk 24
        targetSdk 35
        versionCode 1
        versionName "1.0.0"

        externalNativeBuild {
            ndkBuild {
                // 传递参数到 ndk-build
                arguments "NDK_APPLICATION_MK=src/main/jni/Application.mk"
                // 指定 ABI 过滤器
                abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64'
            }
        }
//        ndk {
//            moduleName "serial_port"
//            abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64'
//        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
//    kotlinOptions {
//        jvmTarget = '11'
//    }
    buildFeatures {
        compose true
    }

    externalNativeBuild {
        ndkBuild {
            // 指定 Android.mk 路径
            path "src/main/jni/Android.mk"
        }
    }

    sourceSets {
        sourceSets.main {
            jni.srcDirs = []
            jniLibs.srcDir 'src/main/libs'
        }
    }

    ndkVersion '27.2.12479018'

    publishing {
        singleVariant("release") {
            withSourcesJar()  // 自动生成源码包
            withJavadocJar()  // 自动生成文档包
        }
    }
}
def localProperties = new Properties()
file("../local.properties").withInputStream { localProperties.load(it) }
def giteeUsername = localProperties.getProperty("gpr.user")
def giteePassword = localProperties.getProperty("gpr.key")

// 安全获取GitHub凭证
//def getGithubCredentials = {
//    return [
//            username: giteeUsername,
//            password: giteePassword
//    ]
//}
//
//afterEvaluate {
//    publishing {
//        publications {
//            release(MavenPublication) {
//                groupId = 'com.github.portconnect'  // 替换为你的GitHub用户名
//                artifactId = project.name
//                version = android.defaultConfig.versionName + '-SNAPSHOT'
//
//                // 使用新版API指定发布组件
//                from components.findByName('release')
//
//                // POM元数据配置
//                pom {
//                    name = project.name
//                    description = 'Android Library published to GitHub Maven'
//                    url = 'https://github.com/zeezer/AndroidMaven'
//
//                    licenses {
//                        license {
//                            name = 'The Apache License, Version 2.0'
//                            url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
//                        }
//                    }
//
//                    developers {
//                        developer {
//                            id = 'zeezer'
//                            name = 'zeezer'
//                            email = '1157833606@qq.com'
//                        }
//                    }
//
//                    scm {
//                        connection = 'scm:git:git://github.com/zeezer/AndroidMaven.git'
//                        developerConnection = 'scm:git:ssh://github.com/zeezer/AndroidMaven.git'
//                        url = 'https://github.com/zeezer/AndroidMaven'
//                    }
//                }
//            }
//        }
//
//        repositories {
//            // GitHub Maven仓库配置
//            maven {
//                name = "AndroidMaven"
//                url = uri("https://maven.pkg.github.com/zeezer/AndroidMaven")
//                credentials {
//                    username = getGithubCredentials().username
//                    password = getGithubCredentials().password
//                }
//            }
//        }
//    }
//
//    tasks.named("generatePomFileForReleasePublication") {
//        doLast {
//            def pomFile = file("$buildDir/publications/release/pom-default.xml")
//            def pom = new XmlSlurper().parse(pomFile)
//
//            // 清除自动生成的空依赖
//            pom.dependencies.replaceNode {}
//
//            // 添加实际依赖
//            def depsNode = pom.appendNode('dependencies')
//
//            configurations.implementation.allDependencies.each { dep ->
//                if (dep.group != null && dep.version != null) {
//                    def depNode = depsNode.appendNode('dependency')
//                    depNode.appendNode('groupId', dep.group)
//                    depNode.appendNode('artifactId', dep.name)
//                    depNode.appendNode('version', dep.version)
//                    depNode.appendNode('scope', 'runtime')
//                }
//            }
//
//            configurations.api.allDependencies.each { dep ->
//                if (dep.group != null && dep.version != null) {
//                    def depNode = depsNode.appendNode('dependency')
//                    depNode.appendNode('groupId', dep.group)
//                    depNode.appendNode('artifactId', dep.name)
//                    depNode.appendNode('version', dep.version)
//                    depNode.appendNode('scope', 'compile')
//                }
//            }
//
//            // 保存修改
//            def printer = new XmlNodePrinter(new PrintWriter(pomFile))
//            printer.print(pom)
//        }
//    }
//}


//// 安全读取凭证
//def getGiteeCreds = { key ->
//    return project.findProperty(key) ?: System.getenv(key)
//}
//
//afterEvaluate {
//    // 方案1：尝试标准release组件
//    def releaseComponent = components.findByName('release')
//
//    publishing {
//        publications {
////            if (releaseComponent) {
////                // 使用找到的release组件
////                release(MavenPublication) {
////                    from releaseComponent
////                    groupId = 'com.gitee.yourname'
////                    artifactId = 'your-lib'
////                    version = '1.0.0'
////                }
////            } else {
//                // 方案2：手动指定AAR文件
//                aar(MavenPublication) {
//                    groupId = 'com.zeezer'
//                    artifactId = 'PortConnect'
//                    version = '1.0.0'
//
//                    // 假设使用默认构建变体
//                    artifact("$buildDir/outputs/aar/app-release.aar")
//                }
////            }
//        }
//
//        repositories {
//            maven {
//                name 'Gitee'
//                url 'https://gitee.com/zeezer/android-maven/tree/master/packages/maven'
////                allowInsecureProtocol = true
//                credentials {
//                    username = giteeUsername  // 安全凭证（避免硬编码）
//                    password = giteePassword  // 建议使用环境变量或 local.properties
//                }
//            }
//        }
//
////    publishing {
////        publications {
////            aar(MavenPublication) {
////                // 设置发布信息
////                groupId = 'com.zeezer'      // 组织ID
////                artifactId = 'PortConnect'      // 库名称
////                version = '1.0.0'                // 版本号
////                // 发布构建的AAR文件
////                artifact("$buildDir/outputs/aar/${project.name}-release.aar")
////                // 自动生成pom文件（包含依赖信息）
////                pom.withXml {
////                    def dependenciesNode = asNode().appendNode('dependencies')
////                    configurations.implementation.allDependencies.each { dep ->
////                        if (dep.version != "unspecified") {
////                            def dependencyNode = dependenciesNode.appendNode('dependency')
////                            dependencyNode.appendNode('groupId', dep.group)
////                            dependencyNode.appendNode('artifactId', dep.name)
////                            dependencyNode.appendNode('version', dep.version)
////                        }
////                    }
////                }
////            }
////        }
////
////        repositories {
////            maven {
////                // 发布到项目内的本地仓库
////                url = uri("${rootProject.projectDir}/local-maven-repo")
////            }
////        }
//    }
//}

dependencies {
    implementation fileTree(include: ['*.jar', '*.aar'], dir: 'src/main/libs')
//    implementation 'com.zeezer:PortConnect:1.0.0'
//    implementation libs.androidx.core.ktx
//    implementation libs.androidx.lifecycle.runtime.ktx
//    implementation libs.androidx.activity.compose
//    implementation platform(libs.androidx.compose.bom)
//    implementation libs.androidx.ui
//    implementation libs.androidx.ui.graphics
//    implementation libs.androidx.ui.tooling.preview
//    implementation libs.androidx.material3
}

publishing {
    publications {
        release(MavenPublication) {
            // 注：这里设置的groupId和artifactId和version等，在JitPack编译的时候不会用到，会被替换成 `com.github.User:Repo:Tag` 这样的样式
            groupId = 'com.zeezer'
            artifactId = 'PortConnect'
            version = '1.0.0'

            afterEvaluate {
                from components.release
            }
        }
    }
}